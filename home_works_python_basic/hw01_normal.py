
__author__ = 'Бостан Сергей Витальевич'

# Задача-1: Дано произвольное целое число, вывести самую большую цифру этого числа.
# Например, дается x = 58375.
# Нужно вывести максимальную цифру в данном числе, т.е. 8.
# Подразумевается, что мы не знаем это число заранее.
# Число приходит в виде целого беззнакового.
# Подсказки:
# * постарайтесь решить задачу с применением арифметики и цикла while;
# * при желании и понимании решите задачу с применением цикла for.

def max_number(num: int):
    string_num = str(num)
    print('Через while:')
    max_number_version_one = 0
    while num > 0:
        curr_num = num % 10
        if curr_num > max_number_version_one:
            max_number_version_one = curr_num
        num //= 10
    print(f'Максимальная цифра: {max_number_version_one}')
    print('Конец первого вывода...')

    print('\nЧерез for, max и строки:')
    max_number_version_two = 0
    for symb in string_num:
        max_number_version_two = max(max_number_version_two, int(symb))
    print(f'Максимальная цифра: {max_number_version_one}')
    print('Конец второго вывода...')


# max_number(int(input('give me a number: ')))                      # снять комментарий для запуска кода

# Задача-2: Исходные значения двух переменных запросить у пользователя.
# Поменять значения переменных местами. Вывести новые значения на экран.
# Решите задачу, используя только две переменные.
# Подсказки:
# * постарайтесь сделать решение через действия над числами;
# * при желании и понимании воспользуйтесь синтаксисом кортежей Python.

# уже БЫЛО на предыдущем шаге



# Задача-3: Напишите программу, вычисляющую корни квадратного уравнения вида
# ax² + bx + c = 0.
# Коэффициенты уравнения вводятся пользователем.
# Для вычисления квадратного корня воспользуйтесь функцией sqrt() модуля math:
# import math
# math.sqrt(4) - вычисляет корень числа 4

from math import pow, sqrt


def find_sqrt_roots(a, b, c):
    a, b, c, = float(a), float(b), float(c)
    discr = pow(b, 2) - 4 * a * c
    if discr < 0:
        print('нету корней')
    elif discr == 0:
        print(f'корень всего один: {-b / (2 * a)}')
    else:
        x1 = (-b + sqrt(discr)) / (2 * a)
        x2 = (-b +-sqrt(discr)) / (2 * a)
        print(f'первый корень: {x1}, второй: {x2}')


# find_sqrt_roots(*input('введи три числа через пробел: ').split())               # снять комментарий для запуска кода
